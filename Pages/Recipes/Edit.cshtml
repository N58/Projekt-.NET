@page
@model PortalKulinarny.Pages.Recipes.EditModel
@using PortalKulinarny.Models;
@{
    ViewData["Title"] = "Edytuj";
    <script type="text/javascript">
        var _validFileExtensions = [".jpg", ".jpeg", ".bmp", ".gif", ".png"];
        refresh = function () {
            var sFileName = document.getElementById('FileUpload').value;
            var valid = false;
            if (sFileName.length > 0) {
                for (var j = 0; j < _validFileExtensions.length; j++) {
                    var sCurExtension = _validFileExtensions[j];
                    if (sFileName.substr(sFileName.length - sCurExtension.length, sCurExtension.length).toLowerCase() == sCurExtension.toLowerCase()) {
                        valid = true;
                        document.getElementById('UploadButton').click();
                    }
                }
            }
            if (valid === false) {
                document.getElementById('errorname').innerHTML = "Uploaded file is not of a valid type!";
            }
        }
    </script>
}

<h1>Edytuj przepis</h1>
<hr />
<div class="row">
    <div class="col">
        <form method="post" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Recipe.Name" class="control-label"></label>
                <input asp-for="Recipe.Name" class="form-control w-25" />
                <span asp-validation-for="Recipe.Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Recipe.Description" class="control-label"></label>
                <textarea asp-for="Recipe.Description" class="form-control" style="width: 60%; resize: none;" rows="6"></textarea>
                <span asp-validation-for="Recipe.Description" class="text-danger"></span>
            </div>
            <div class="row" style="max-width: 60%">
                <div class="col">
                    <label asp-for="NewIngredient" class="control-label"></label>
                    <hr style="margin: 5px 0" />
                    @if (Model.Ingredients != null)
                    {
                        @foreach (var item in Model.Ingredients)
                        {
                            <div class="align-items-center row">
                                <div class="col">@item</div>

                                <button class="col btn-icon red text-right mr-3" asp-page-handler="DeleteIngredient" asp-route-name="@item" formnovalidate>
                                    <i class="fas fa-trash-alt"></i>
                                </button>
                            </div><hr style="margin: 5px 0" />
                        }
                    }
                    <div class="form-group">
                        <input asp-for="NewIngredient" class="form-control" />
                    </div>
                    <button class="btn btn-red mb-4" asp-page-handler="AddIngredient" formnovalidate>Dodaj składnik</button>
                </div>
                <div class="col">
                    <label asp-for="NewCategory" class="control-label"></label>
                    <hr style="margin: 5px 0" />
                    @if (Model.CategoriesId != null)
                    {
                        foreach (var id in Model.CategoriesId)
                        {
                            var item = await Model._categoryService.FindAsync(id);
                            <div class="align-items-center row">
                                <div class="col">@item.Name</div>

                                <button class="col btn-icon red text-right mr-3" formnovalidate asp-page-handler="DeleteCategory" asp-route-id="@item.Id">
                                    <i class="fas fa-trash-alt"></i>
                                </button>
                            </div><hr style="margin: 5px 0" />
                        }
                    }
                    @{
                        var SelectList = new SelectList(await Model._categoryService.GetAsync(), "Id", "Name");
                    }
                    <div class="form-group">
                        <select class="custom-select" asp-for="NewCategory" asp-items="@SelectList">
                            <option selected value="">Wybierz kategorię</option>
                        </select>
                    </div>
                    <button class="btn btn-red" asp-page-handler="AddCategory" formnovalidate>Dodaj kategorię</button>
                </div>
            </div>
            <div class="row">
                @for (int i = 0; i < Model.Images.Count; i++)
                {
                    <div class="col-auto mb-3 custom-div-image">
                        <img class="custom-image rounded" src="@Model.Images[i].URL" asp-append-version="true" alt="Preview">
                        <button class="remove-image" formnovalidate asp-page-handler="DeleteImage" asp-route-id="@i" style="display:inline;">&#215;</button>
                    </div>
                }
            </div>
            <div class="form-group" style="max-width: 40%">
                <div class="custom-file">
                    <input asp-for="NewImage" id="FileUpload" onchange="refresh()" class="custom-file-input" accept="image/*" />
                    <label asp-for="NewImage" class="custom-file-label"></label>
                    <span asp-validation-for="NewImage" class="invalid-feedback"></span>
                    <span id="errorname" style="color: red"></span>
                    <button hidden id="UploadButton" asp-page-handler="AddImage" formnovalidate></button>
                </div>
            </div>

            <div>
                <div class="form-group">
                    <input type="submit" asp-page-handler="" value="Zapisz" class="btn btn-red" />
                </div>
            </div>

        </form>
    </div>
</div>

<div>
    <a asp-page="Index">Wróć</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
