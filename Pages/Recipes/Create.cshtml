@page
@model PortalKulinarny.Pages.Recipes.CreateModel

@{
    ViewData["Title"] = "Create";
}

<h1>Dodaj przepisz</h1>

<h4>Podaj przepis</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Recipe.Name" class="control-label"></label>
                <input asp-for="Recipe.Name" class="form-control" />
                <span asp-validation-for="Recipe.Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Recipe.Description" class="control-label"></label>
                <input asp-for="Recipe.Description" class="form-control" />
                <span asp-validation-for="Recipe.Description" class="text-danger"></span>
            </div>
            @if (Model.Recipe != null && Model.Recipe.Ingredients != null)
            {
                @foreach (var item in Model.Recipe.Ingredients)
                {
                    <p>@item.Name id: @item.Id</p>
                }
            }
            <div class="form-group">
                <label asp-for="NewIngredient.Name" class="control-label"></label>
                <input asp-for="NewIngredient.Name" class="form-control" />
                <span asp-validation-for="NewIngredient.Name" class="text-danger"></span>
            </div>
            <button class="btn btn-primary mb-4" asp-page-handler="AddIngredient" formnovalidate >Dodaj składnik</button>
            <div class="form-group">
                <input type="submit" asp-page-handler="" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-page="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
